Initializer Productions

--- tool
'<,'>s/{[^{]*$
---


initializer appears on the right hand side of init_declarator production
as in 

	init_declarator -> declarator '=' initializer

Also note it can reduce to initializer_list by the following production

	initializer_list
		: initializer 
		| initializer_list ',' initializer 
	

Here is the list of productions taken on initializer, but not an exhaustive
list. This list is created by doing depth-first search on initializer but also
taking all the siblings of a production but those siblings are not
investigated. For example, when the path, identifier, is taken, all
the siblings of it ( constant, string,  are '(' expression ')' ) are taken
without being investigated.

initializer
	assignment_expression
		conditional_expression
			logical_or_expression
				logical_and_expression
					inclusive_or_expression
						exclusive_or_expression
							and_expression
								equality_expression
									relational_expression
										shift_expression 
											additive_expression 
												multiplicative_expression 
													cast_expression 
														unary_expression 
															postfix_expression 
																primary_expression 
																	identifier 
																		IDENTIFIER
																	constant 
																	string 
																	'(' expression ')' 
																postfix_expression '[' expression ']' 
																postfix_expression '(' ')' 
																postfix_expression '(' argument_expression_list ')' 
																postfix_expression '.' identifier 
																postfix_expression PTR_OP identifier 
																postfix_expression INC_OP 
																postfix_expression DEC_OP 
															INC_OP unary_expression 
															DEC_OP unary_expression 
															unary_operator cast_expression
															SIZEOF unary_expression 
															SIZEOF '(' type_name ')' 
														'(' type_name ')' cast_expression
													multiplicative_expression '*' cast_expression
													multiplicative_expression '/' cast_expression
													multiplicative_expression '%' cast_expression
												additive_expression '+' multiplicative_expression
												additive_expression '-' multiplicative_expression
											shift_expression LEFT_OP additive_expression 
											shift_expression RIGHT_OP additive_expression
										relational_expression '<' shift_expression 
										relational_expression '>' shift_expression 
										relational_expression LE_OP shift_expression
										relational_expression GE_OP shift_expression
									equality_expression EQ_OP relational_expression 
									equality_expression NE_OP relational_expression 
								and_expression '&' equality_expression
						inclusive_or_expression '|' exclusive_or_expression
					logical_and_expression AND_OP inclusive_or_expression
				logical_or_expression OR_OP logical_and_expression
			logical_or_expression '?' expression ':' conditional_expression
		unary_expression assignment_operator assignment_expression
	'{' initializer_list '}' 
	'{' initializer_list ',' '}' 
