// Generated by Flexc++ V0.98.00 on Mon, 06 May 2013 21:26:06 -0700

#include <iostream>
#include <fstream>
#include <sstream>
#include <stdexcept>

// $insert class_ih
#include "Scanner.ih"


    // s_ranges__: use (unsigned) characters as index to obtain
    //           that character's range-number.
    //           The range for EOF is defined in a constant in the
    //           class header file
size_t const ScannerBase::s_ranges__[] =
{
     0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
     4, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,
    21,21,21,21,21,21,22,22,23,24,25,26,27,28,29,30,30,30,30,31,32,33,33,33,33,
    33,34,35,35,35,36,37,37,38,39,40,41,41,42,43,43,44,45,46,47,48,49,50,51,52,
    53,54,55,56,57,58,59,60,61,62,63,63,64,65,66,66,67,67,68,69,70,71,72,73,74,
    75,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,78,
};

    // s_dfa__ contains the rows of *all* DFAs ordered by start state.
    // The enum class StartCondition__ is defined in the baseclass header
    // INITIAL is always 0.
    // Each entry defines the row to transit to if the column's
    // character range was sensed. Row numbers are relative to the
    // used DFA and d_dfaBase__ is set to the first row of the subset to use.
    // The row's final two values are begin and end indices in
    // s_rfc__[] (rule, flags and count), defining the state's rule details
int const ScannerBase::s_dfa__[][82] =
{
    // INITIAL
    {-1, 1, 2, 3, 4, 5, 6, 7, 4, 8, 9,10,11,12,13,14,15,16,17,18,
         19,20,20,21,22,23,24,25,26, 4,27,27,27,27,28,27,27,27,27,27,
         29,27,27,27,30, 4,31,32,27, 4,33,34,35,36,37,38,39,27,40,27,
         27,41,27,27,27,27,42,43,44,45,27,27,27,46,47,48,49, 4, 4,50,
            0, 0},  // 0
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            0, 1},  // 1
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            1, 2},  // 2
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            2, 3},  // 3
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            3, 4},  // 4
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            4, 5},  // 5
    {-1,-1,-1,-1,-1,-1,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            5, 6},  // 6
    {-1,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,55,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-1,-1,
            6, 7},  // 7
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,56,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            7, 8},  // 8
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            8, 9},  // 9
    {-1,60,-1,60,60,60,60,60,60,60,60,61,60,60,60,60,60,60,60,60,
         60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,
         60,60,60,60,60,62,60,60,60,60,60,60,60,60,60,60,60,60,60,60,
         60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,-1,
            9,10},  // 10
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           10,11},  // 11
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           11,12},  // 12
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           12,13},  // 13
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,64,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           13,14},  // 14
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           14,15},  // 15
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,66,-1,-1,
         -1,-1,-1,-1,-1,-1,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           15,16},  // 16
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,69,-1,
         70,70,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           16,17},  // 17
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,71,-1,-1,-1,-1,72,
         -1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           17,18},  // 18
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,-1,
         75,75,76,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,78,-1,-1,-1,-1,-1,
         79,-1,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,-1,-1,-1,
         -1,81,-1,-1,-1,-1,-1,79,-1,-1,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           18,19},  // 19
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,-1,
         20,20,20,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,82,-1,-1,-1,-1,-1,
         83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,-1,-1,-1,
         -1,84,-1,-1,-1,-1,-1,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           19,20},  // 20
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           20,21},  // 21
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           21,22},  // 22
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,30,-1,85,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           22,23},  // 23
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           23,24},  // 24
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,88,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           24,25},  // 25
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           25,26},  // 26
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           26,27},  // 27
    {-1,-1,-1,-1,-1,-1,-1,53,-1,-1,-1,90,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           27,28},  // 28
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           28,29},  // 29
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           29,30},  // 30
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           30,31},  // 31
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           31,32},  // 32
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,92,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           32,33},  // 33
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,93,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           33,34},  // 34
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,94,27,27,27,27,27,27,95,27,27,
         27,27,27,96,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           34,35},  // 35
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,97,27,27,27,27,27,
         27,27,27,98,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           35,36},  // 36
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,99,27,100,27,27,27,27,27,27,101,27,27,-1,-1,-1,-1,-1,-1,-1,
           36,37},  // 37
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,102,27,103,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           37,38},  // 38
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,104,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           38,39},  // 39
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,105,27,27,27,27,
         27,27,27,106,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           39,40},  // 40
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,107,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           40,41},  // 41
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,108,27,27,109,110,27,
         27,27,27,27,27,27,27,111,27,112,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           41,42},  // 42
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,113,27,27,27,27,27,27,27,114,27,-1,-1,-1,-1,-1,-1,-1,
           42,43},  // 43
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,115,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           43,44},  // 44
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,116,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           44,45},  // 45
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           45,46},  // 46
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,118,-1,-1,-1,-1,-1,
           46,47},  // 47
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           47,48},  // 48
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           48,49},  // 49
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           49,50},  // 50
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,119,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           50,50},  // 51
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           50,51},  // 52
    {-1,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,55,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-1,-1,
           51,51},  // 53
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           51,52},  // 54
    {-1,53,-1,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-1,
           52,52},  // 55
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           52,53},  // 56
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,120,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           53,53},  // 57
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           53,54},  // 58
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           54,55},  // 59
    {-1,121,-1,121,121,121,121,121,121,121,121,122,121,121,121,121,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,
         121,121,121,121,121,123,121,121,121,121,121,121,121,121,121,121,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-1,-1,
           55,55},  // 60
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,124,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           55,55},  // 61
    {-1,-1,-1,-1,-1,-1,-1,125,-1,-1,-1,126,-1,-1,-1,-1,-1,-1,-1,-1,
         127,127,-1,-1,-1,-1,-1,-1,125,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,125,-1,-1,-1,-1,125,125,-1,-1,-1,125,-1,-1,-1,-1,
         -1,-1,-1,125,-1,-1,125,125,125,-1,125,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           55,55},  // 62
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           55,56},  // 63
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           56,57},  // 64
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           57,58},  // 65
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           58,59},  // 66
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           59,60},  // 67
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           60,61},  // 68
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,128,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           61,61},  // 69
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         70,70,70,-1,-1,-1,-1,-1,-1,-1,-1,129,130,-1,130,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,129,130,-1,-1,-1,-1,
         -1,130,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           61,62},  // 70
    {-1,71,-1,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
         71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
         71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
         71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-1,
           62,63},  // 71
    {-1,72,-1,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,
         72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,
         72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,
         72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-1,
           63,64},  // 72
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           64,65},  // 73
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         70,70,70,-1,-1,-1,-1,-1,-1,-1,-1,131,132,-1,132,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,131,132,-1,-1,-1,-1,
         -1,132,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           65,66},  // 74
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,-1,
         75,75,76,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,78,-1,-1,-1,-1,-1,
         79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,-1,-1,-1,
         -1,81,-1,-1,-1,-1,-1,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           66,67},  // 75
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,-1,
         76,76,76,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           67,67},  // 76
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,133,-1,133,-1,-1,
         134,134,134,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           67,67},  // 77
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,135,-1,-1,-1,-1,-1,
         136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           67,68},  // 78
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,137,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,138,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           68,69},  // 79
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,139,-1,
         140,140,140,-1,-1,-1,-1,-1,-1,-1,140,140,140,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           69,69},  // 80
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,135,-1,-1,-1,-1,-1,136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           69,70},  // 81
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,141,-1,-1,-1,-1,-1,
         142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           70,71},  // 82
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,143,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,144,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           71,72},  // 83
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,141,-1,-1,-1,-1,-1,142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           72,73},  // 84
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,145,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           73,74},  // 85
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           74,75},  // 86
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           75,76},  // 87
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           76,77},  // 88
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,146,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           77,78},  // 89
    {-1,121,-1,121,121,121,121,121,121,121,121,-1,121,121,121,121,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,
         121,121,121,121,121,123,121,121,121,121,121,121,121,121,121,121,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-1,-1,
           78,78},  // 90
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           78,79},  // 91
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,147,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           79,80},  // 92
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,148,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           80,81},  // 93
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,149,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           81,82},  // 94
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,150,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           82,83},  // 95
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,151,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           83,84},  // 96
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,152,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           84,85},  // 97
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,153,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           85,86},  // 98
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,154,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           86,87},  // 99
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,155,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           87,88},  // 100
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,156,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           88,89},  // 101
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,157,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           89,90},  // 102
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,158,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           90,91},  // 103
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,159,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           91,92},  // 104
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           92,93},  // 105
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,160,27,27,27,27,27,161,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           93,94},  // 106
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,162,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           94,95},  // 107
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,163,27,27,27,
         27,27,27,27,27,27,164,165,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           95,96},  // 108
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,166,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           96,97},  // 109
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,167,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,168,-1,-1,-1,-1,-1,-1,-1,
           97,98},  // 110
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,169,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,170,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           98,99},  // 111
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,171,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           99,100},  // 112
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,172,27,
         27,27,27,27,27,27,173,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           100,101},  // 113
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,174,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           101,102},  // 114
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,175,27,
         27,176,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           102,103},  // 115
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,177,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           103,104},  // 116
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           104,105},  // 117
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           105,106},  // 118
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           106,107},  // 119
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,178,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           107,107},  // 120
    {-1,121,-1,121,121,121,121,121,121,121,121,122,121,121,121,121,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,
         121,121,121,121,121,123,121,121,121,121,121,121,121,121,121,121,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-1,-1,
           107,107},  // 121
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           107,108},  // 122
    {-1,-1,-1,-1,-1,-1,-1,125,-1,-1,-1,125,-1,-1,-1,-1,-1,-1,-1,-1,
         127,127,-1,-1,-1,-1,-1,-1,125,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,125,-1,-1,-1,-1,125,125,-1,-1,-1,125,-1,-1,-1,-1,
         -1,-1,-1,125,-1,-1,125,125,125,-1,125,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           108,108},  // 123
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           108,109},  // 124
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         179,179,179,-1,-1,-1,-1,-1,-1,-1,179,179,179,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,179,179,179,179,179,179,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           109,109},  // 125
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         179,179,179,-1,-1,-1,-1,-1,-1,-1,179,179,179,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,179,179,179,179,179,179,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           109,110},  // 126
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         180,180,179,-1,-1,-1,-1,-1,-1,-1,179,179,179,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,179,179,179,179,179,179,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           110,110},  // 127
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           110,111},  // 128
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,181,-1,181,-1,-1,
         182,182,182,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           111,111},  // 129
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           111,112},  // 130
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,183,-1,183,-1,-1,
         184,184,184,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           112,112},  // 131
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           112,113},  // 132
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         134,134,134,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           113,113},  // 133
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         134,134,134,-1,-1,-1,-1,-1,-1,-1,-1,-1,185,-1,185,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,185,-1,-1,-1,-1,
         -1,185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           113,114},  // 134
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           114,115},  // 135
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           115,116},  // 136
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           116,117},  // 137
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           117,118},  // 138
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         186,186,186,-1,-1,-1,-1,-1,-1,-1,186,186,186,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,186,186,186,186,186,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           118,118},  // 139
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,187,-1,
         140,140,140,-1,-1,-1,-1,-1,-1,-1,140,140,140,-1,188,-1,189,-1,-1,-1,
         190,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,-1,-1,-1,-1,
         -1,191,-1,-1,189,-1,-1,190,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           118,119},  // 140
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           119,120},  // 141
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           120,121},  // 142
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,142,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           121,122},  // 143
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           122,123},  // 144
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           123,124},  // 145
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           124,125},  // 146
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,192,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           125,126},  // 147
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,193,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           126,127},  // 148
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,194,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           127,128},  // 149
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,195,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           128,129},  // 150
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,196,197,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           129,130},  // 151
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,198,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           130,131},  // 152
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,199,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           131,132},  // 153
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,200,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           132,133},  // 154
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,201,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           133,134},  // 155
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,202,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           134,135},  // 156
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,203,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           135,136},  // 157
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           136,137},  // 158
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,204,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           137,138},  // 159
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,205,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           138,139},  // 160
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           139,140},  // 161
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,206,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           140,141},  // 162
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,207,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           141,142},  // 163
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,208,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           142,143},  // 164
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,209,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           143,144},  // 165
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,210,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           144,145},  // 166
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,211,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           145,146},  // 167
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,212,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           146,147},  // 168
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,213,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           147,148},  // 169
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,214,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           148,149},  // 170
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,215,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           149,150},  // 171
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,216,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           150,151},  // 172
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,217,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           151,152},  // 173
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,218,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           152,153},  // 174
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,219,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           153,154},  // 175
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,220,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           154,155},  // 176
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,221,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           155,156},  // 177
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,222,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           156,156},  // 178
    {-1,121,-1,121,121,121,121,121,121,121,121,122,121,121,121,121,121,121,121,121,
         179,179,179,121,121,121,121,121,121,121,179,179,179,121,121,121,121,121,121,121,
         121,121,121,121,121,123,121,121,121,121,179,179,179,179,179,179,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-1,-1,
           156,156},  // 179
    {-1,121,-1,121,121,121,121,121,121,121,121,122,121,121,121,121,121,121,121,121,
         179,179,179,121,121,121,121,121,121,121,179,179,179,121,121,121,121,121,121,121,
         121,121,121,121,121,123,121,121,121,121,179,179,179,179,179,179,121,121,121,121,
         121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-1,-1,
           156,156},  // 180
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         182,182,182,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           156,156},  // 181
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         182,182,182,-1,-1,-1,-1,-1,-1,-1,-1,-1,130,-1,130,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,130,-1,-1,-1,-1,
         -1,130,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           156,157},  // 182
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         184,184,184,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           157,157},  // 183
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         184,184,184,-1,-1,-1,-1,-1,-1,-1,-1,-1,132,-1,132,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,132,-1,-1,-1,-1,
         -1,132,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           157,158},  // 184
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           158,159},  // 185
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         186,186,186,-1,-1,-1,-1,-1,-1,-1,186,186,186,-1,-1,-1,223,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,186,186,186,186,186,-1,-1,-1,-1,
         -1,-1,-1,-1,223,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           159,159},  // 186
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         186,186,186,-1,-1,-1,-1,-1,-1,-1,186,186,186,-1,-1,-1,224,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,186,186,186,186,186,186,-1,-1,-1,-1,
         -1,-1,-1,-1,224,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           159,159},  // 187
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,225,-1,-1,-1,-1,-1,
         226,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,226,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           159,160},  // 188
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,227,-1,227,-1,-1,
         228,228,228,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           160,160},  // 189
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,229,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,230,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           160,161},  // 190
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         226,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,225,-1,-1,-1,-1,-1,226,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           161,162},  // 191
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           162,163},  // 192
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         231,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           163,164},  // 193
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           164,165},  // 194
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           165,166},  // 195
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,232,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           166,167},  // 196
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,233,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           167,168},  // 197
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,234,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           168,169},  // 198
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,235,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           169,170},  // 199
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           170,171},  // 200
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           171,172},  // 201
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,236,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           172,173},  // 202
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,237,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           173,174},  // 203
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           174,175},  // 204
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,238,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           175,176},  // 205
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           176,177},  // 206
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,239,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           177,178},  // 207
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,240,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           178,179},  // 208
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,241,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           179,180},  // 209
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,242,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           180,181},  // 210
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,243,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           181,182},  // 211
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,244,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           182,183},  // 212
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,245,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           183,184},  // 213
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,246,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           184,185},  // 214
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,247,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           185,186},  // 215
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,248,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           186,187},  // 216
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,249,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           187,188},  // 217
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,250,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           188,189},  // 218
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           189,190},  // 219
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,251,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           190,191},  // 220
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,252,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           191,192},  // 221
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,253,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           192,192},  // 222
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,254,-1,254,-1,-1,
         255,255,255,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           192,192},  // 223
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,256,-1,256,-1,-1,
         257,257,257,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           192,192},  // 224
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         226,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,226,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           192,193},  // 225
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           193,194},  // 226
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         228,228,228,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           194,194},  // 227
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         228,228,228,-1,-1,-1,-1,-1,-1,-1,-1,-1,258,-1,258,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,258,-1,-1,-1,-1,
         -1,258,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           194,195},  // 228
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,226,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           195,196},  // 229
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,226,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           196,197},  // 230
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           197,198},  // 231
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           198,199},  // 232
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,259,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           199,200},  // 233
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,260,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           200,201},  // 234
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,261,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           201,202},  // 235
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,262,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           202,203},  // 236
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           203,204},  // 237
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,263,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           204,205},  // 238
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,264,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           205,206},  // 239
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,265,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           206,207},  // 240
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,266,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           207,208},  // 241
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           208,209},  // 242
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,267,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           209,210},  // 243
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,268,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           210,211},  // 244
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,269,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           211,212},  // 245
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,270,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           212,213},  // 246
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,271,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           213,214},  // 247
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           214,215},  // 248
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,272,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           215,216},  // 249
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,273,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           216,217},  // 250
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,274,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           217,218},  // 251
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           218,219},  // 252
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,275,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           219,219},  // 253
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         255,255,255,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           219,219},  // 254
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         255,255,255,-1,-1,-1,-1,-1,-1,-1,-1,-1,276,-1,276,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,276,-1,-1,-1,-1,
         -1,276,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           219,220},  // 255
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         257,257,257,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           220,220},  // 256
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         257,257,257,-1,-1,-1,-1,-1,-1,-1,-1,-1,277,-1,277,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,277,-1,-1,-1,-1,
         -1,277,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           220,221},  // 257
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           221,222},  // 258
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,278,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           222,223},  // 259
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,279,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           223,224},  // 260
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           224,225},  // 261
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           225,226},  // 262
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           226,227},  // 263
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,280,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           227,228},  // 264
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,281,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           228,229},  // 265
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           229,230},  // 266
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           230,231},  // 267
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           231,232},  // 268
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           232,233},  // 269
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           233,234},  // 270
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           234,235},  // 271
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,282,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           235,236},  // 272
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,283,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           236,237},  // 273
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,284,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           237,238},  // 274
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,285,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           238,238},  // 275
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           238,239},  // 276
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           239,240},  // 277
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,286,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           240,241},  // 278
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           241,242},  // 279
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,287,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           242,243},  // 280
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,288,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           243,244},  // 281
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,289,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           244,245},  // 282
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           245,246},  // 283
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,290,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           246,247},  // 284
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,291,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           247,247},  // 285
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           247,248},  // 286
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           248,249},  // 287
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           249,250},  // 288
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           250,251},  // 289
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         27,27,27,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,-1,-1,-1,-1,27,-1,27,27,27,27,27,27,27,27,27,27,
         27,27,27,27,27,27,27,27,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,
           251,252},  // 290
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,292,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           252,252},  // 291
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           252,253},  // 292
};

    // The first value is the rule index
    // The second value is the FLAG: see the scannerbase.h file
    // 1: Final     4: Count        11: Final/BOL,Inc     
    // 2: Inc.      5: Final,Count  13: Final/BOL,Count
    // 3: Final,Inc 9: Final/BOL    
    // The third value is the LOP count value (valid for Count flags)
size_t const ScannerBase::s_rfc__[][3] =
{
//     R  F  C
     {99, 1, 0},  // 0
     {100, 1, 0},  // 1
     {97, 1, 0},  // 2
     {102, 1, 0},  // 3
     {98, 1, 0},  // 4
     {85, 1, 0},  // 5
     {102, 1, 0},  // 6
     {91, 1, 0},  // 7
     {84, 1, 0},  // 8
     {102, 1, 0},  // 9
     {79, 1, 0},  // 10
     {80, 1, 0},  // 11
     {89, 1, 0},  // 12
     {88, 1, 0},  // 13
     {76, 1, 0},  // 14
     {87, 1, 0},  // 15
     {83, 1, 0},  // 16
     {90, 1, 0},  // 17
     {42, 1, 0},  // 18
     {41, 1, 0},  // 19
     {77, 1, 0},  // 20
     {73, 1, 0},  // 21
     {92, 1, 0},  // 22
     {78, 1, 0},  // 23
     {93, 1, 0},  // 24
     {96, 1, 0},  // 25
     {39, 1, 0},  // 26
     {39, 1, 0},  // 27
     {39, 1, 0},  // 28
     {81, 1, 0},  // 29
     {82, 1, 0},  // 30
     {94, 1, 0},  // 31
     {39, 1, 0},  // 32
     {39, 1, 0},  // 33
     {39, 1, 0},  // 34
     {39, 1, 0},  // 35
     {39, 1, 0},  // 36
     {39, 1, 0},  // 37
     {39, 1, 0},  // 38
     {39, 1, 0},  // 39
     {39, 1, 0},  // 40
     {39, 1, 0},  // 41
     {39, 1, 0},  // 42
     {39, 1, 0},  // 43
     {39, 1, 0},  // 44
     {74, 1, 0},  // 45
     {95, 1, 0},  // 46
     {75, 1, 0},  // 47
     {86, 1, 0},  // 48
     { 2, 1, 0},  // 49
     {72, 1, 0},  // 50
     {50, 1, 0},  // 51
     {58, 1, 0},  // 52
     {67, 1, 0},  // 53
     {59, 1, 0},  // 54
     {56, 1, 0},  // 55
     {64, 1, 0},  // 56
     {54, 1, 0},  // 57
     {65, 1, 0},  // 58
     {55, 1, 0},  // 59
     {66, 1, 0},  // 60
     {45, 1, 0},  // 61
     { 3, 1, 0},  // 62
     { 4, 1, 0},  // 63
     {57, 1, 0},  // 64
     {46, 1, 0},  // 65
     {42, 1, 0},  // 66
     {42, 1, 0},  // 67
     {42, 1, 0},  // 68
     {42, 1, 0},  // 69
     {41, 1, 0},  // 70
     {41, 1, 0},  // 71
     {41, 1, 0},  // 72
     {63, 1, 0},  // 73
     {69, 1, 0},  // 74
     {71, 1, 0},  // 75
     {70, 1, 0},  // 76
     {62, 1, 0},  // 77
     {60, 1, 0},  // 78
     {39, 1, 0},  // 79
     {39, 1, 0},  // 80
     {39, 1, 0},  // 81
     {39, 1, 0},  // 82
     {39, 1, 0},  // 83
     {39, 1, 0},  // 84
     {12, 1, 0},  // 85
     {39, 1, 0},  // 86
     {39, 1, 0},  // 87
     {39, 1, 0},  // 88
     {39, 1, 0},  // 89
     {39, 1, 0},  // 90
     {39, 1, 0},  // 91
     {20, 1, 0},  // 92
     {39, 1, 0},  // 93
     {39, 1, 0},  // 94
     {39, 1, 0},  // 95
     {39, 1, 0},  // 96
     {39, 1, 0},  // 97
     {39, 1, 0},  // 98
     {39, 1, 0},  // 99
     {39, 1, 0},  // 100
     {39, 1, 0},  // 101
     {39, 1, 0},  // 102
     {39, 1, 0},  // 103
     {61, 1, 0},  // 104
     {68, 1, 0},  // 105
     { 1, 1, 0},  // 106
     {43, 1, 0},  // 107
     {101, 1, 0},  // 108
     {101, 1, 0},  // 109
     {51, 1, 0},  // 110
     {45, 1, 0},  // 111
     {46, 1, 0},  // 112
     {44, 1, 0},  // 113
     {42, 1, 0},  // 114
     {42, 1, 0},  // 115
     {42, 1, 0},  // 116
     {42, 1, 0},  // 117
     {40, 1, 0},  // 118
     {41, 1, 0},  // 119
     {41, 1, 0},  // 120
     {41, 1, 0},  // 121
     {41, 1, 0},  // 122
     {53, 1, 0},  // 123
     {52, 1, 0},  // 124
     {39, 1, 0},  // 125
     {39, 1, 0},  // 126
     {39, 1, 0},  // 127
     {39, 1, 0},  // 128
     {39, 1, 0},  // 129
     {39, 1, 0},  // 130
     {39, 1, 0},  // 131
     {39, 1, 0},  // 132
     {39, 1, 0},  // 133
     {39, 1, 0},  // 134
     {39, 1, 0},  // 135
     {18, 1, 0},  // 136
     {39, 1, 0},  // 137
     {39, 1, 0},  // 138
     {22, 1, 0},  // 139
     {39, 1, 0},  // 140
     {39, 1, 0},  // 141
     {39, 1, 0},  // 142
     {39, 1, 0},  // 143
     {39, 1, 0},  // 144
     {39, 1, 0},  // 145
     {39, 1, 0},  // 146
     {39, 1, 0},  // 147
     {39, 1, 0},  // 148
     {39, 1, 0},  // 149
     {39, 1, 0},  // 150
     {39, 1, 0},  // 151
     {39, 1, 0},  // 152
     {39, 1, 0},  // 153
     {39, 1, 0},  // 154
     {39, 1, 0},  // 155
     {45, 1, 0},  // 156
     {46, 1, 0},  // 157
     {44, 1, 0},  // 158
     {40, 1, 0},  // 159
     {40, 1, 0},  // 160
     {40, 1, 0},  // 161
     { 5, 1, 0},  // 162
     {39, 1, 0},  // 163
     { 7, 1, 0},  // 164
     { 8, 1, 0},  // 165
     {39, 1, 0},  // 166
     {39, 1, 0},  // 167
     {39, 1, 0},  // 168
     {39, 1, 0},  // 169
     {14, 1, 0},  // 170
     {15, 1, 0},  // 171
     {39, 1, 0},  // 172
     {39, 1, 0},  // 173
     {19, 1, 0},  // 174
     {39, 1, 0},  // 175
     {23, 1, 0},  // 176
     {39, 1, 0},  // 177
     {39, 1, 0},  // 178
     {39, 1, 0},  // 179
     {39, 1, 0},  // 180
     {39, 1, 0},  // 181
     {39, 1, 0},  // 182
     {39, 1, 0},  // 183
     {39, 1, 0},  // 184
     {39, 1, 0},  // 185
     {39, 1, 0},  // 186
     {39, 1, 0},  // 187
     {39, 1, 0},  // 188
     {36, 1, 0},  // 189
     {39, 1, 0},  // 190
     {39, 1, 0},  // 191
     {40, 1, 0},  // 192
     {40, 1, 0},  // 193
     {47, 1, 0},  // 194
     {40, 1, 0},  // 195
     {40, 1, 0},  // 196
     { 6, 1, 0},  // 197
     { 9, 1, 0},  // 198
     {39, 1, 0},  // 199
     {39, 1, 0},  // 200
     {39, 1, 0},  // 201
     {39, 1, 0},  // 202
     {17, 1, 0},  // 203
     {39, 1, 0},  // 204
     {39, 1, 0},  // 205
     {39, 1, 0},  // 206
     {39, 1, 0},  // 207
     {27, 1, 0},  // 208
     {39, 1, 0},  // 209
     {39, 1, 0},  // 210
     {39, 1, 0},  // 211
     {39, 1, 0},  // 212
     {39, 1, 0},  // 213
     {34, 1, 0},  // 214
     {39, 1, 0},  // 215
     {39, 1, 0},  // 216
     {39, 1, 0},  // 217
     {38, 1, 0},  // 218
     {48, 1, 0},  // 219
     {49, 1, 0},  // 220
     {47, 1, 0},  // 221
     {39, 1, 0},  // 222
     {39, 1, 0},  // 223
     {13, 1, 0},  // 224
     {16, 1, 0},  // 225
     {21, 1, 0},  // 226
     {39, 1, 0},  // 227
     {39, 1, 0},  // 228
     {26, 1, 0},  // 229
     {28, 1, 0},  // 230
     {29, 1, 0},  // 231
     {30, 1, 0},  // 232
     {31, 1, 0},  // 233
     {32, 1, 0},  // 234
     {39, 1, 0},  // 235
     {39, 1, 0},  // 236
     {39, 1, 0},  // 237
     {48, 1, 0},  // 238
     {49, 1, 0},  // 239
     {39, 1, 0},  // 240
     {11, 1, 0},  // 241
     {39, 1, 0},  // 242
     {39, 1, 0},  // 243
     {39, 1, 0},  // 244
     {33, 1, 0},  // 245
     {39, 1, 0},  // 246
     {10, 1, 0},  // 247
     {24, 1, 0},  // 248
     {25, 1, 0},  // 249
     {35, 1, 0},  // 250
     {37, 1, 0},  // 251
     { 0, 1, 0},  // 252
};

int const (*ScannerBase::s_dfaBase__[])[82] =
{
    s_dfa__ + 0,
};

size_t ScannerBase::s_istreamNr = 0;

// $insert inputImplementation
ScannerBase::Input::Input()
:
    d_in(0),
    d_lineNr(1)
{}

ScannerBase::Input::Input(std::istream *iStream, size_t lineNr)
:
    d_in(iStream),
    d_lineNr(lineNr)
{}

size_t ScannerBase::Input::get()
{
    switch (size_t ch = next())         // get the next input char
    {
        case '\n':
            ++d_lineNr;
        // FALLING THROUGH

        default:
        return ch;
    }
}

size_t ScannerBase::Input::next()
{
    size_t ch;

    if (d_deque.empty())                    // deque empty: next char fm d_in
    {
        if (d_in == 0)
            return AT_EOF;
        ch = d_in->get();
        return *d_in ? ch : AT_EOF;
    }

    ch = d_deque.front();
    d_deque.pop_front();

    return ch;
}

void ScannerBase::Input::reRead(size_t ch)
{
    if (ch < 0x100)
    {
        if (ch == '\n')
            --d_lineNr;
        d_deque.push_front(ch);
    }
}

void ScannerBase::Input::reRead(std::string const &str, size_t fm)
{
    for (size_t idx = str.size(); idx-- > fm; )
        reRead(str[idx]);
}

ScannerBase::ScannerBase(std::istream &in, std::ostream &out)
:
    d_filename("-"),
    d_startCondition(StartCondition__::INITIAL),
    d_state(0),
    d_out(new std::ostream(out.rdbuf())),
    d_sawEOF(false),
    d_atBOL(true),
    d_tailCount(103, std::numeric_limits<size_t>::max()),
// $insert interactiveInit
    d_in(0),
    d_input(new std::istream(in.rdbuf())),
    d_dfaBase__(s_dfa__)
{}

void ScannerBase::switchStream__(std::istream &in, size_t lineNr)
{
    d_input.close();
    d_state = 0;
    d_input = Input(new std::istream(in.rdbuf()), lineNr);
    d_sawEOF = false;
    d_atBOL = true;
}


ScannerBase::ScannerBase(std::string const &infilename, std::string const &outfilename)
:
    d_filename(infilename),
    d_startCondition(StartCondition__::INITIAL),
    d_state(0),
    d_out(outfilename == "-"    ? new std::ostream(std::cout.rdbuf()) :
          outfilename == ""     ? new std::ostream(std::cerr.rdbuf()) :
                                  new std::ofstream(outfilename)),
    d_sawEOF(false),
    d_atBOL(true),
    d_tailCount(103, std::numeric_limits<size_t>::max()),
    d_input(new std::ifstream(infilename)),
    d_dfaBase__(s_dfa__)
{}

inline void ScannerBase::switchStreams(std::istream &in, std::ostream &out)
{
    switchStream__(in, 1);
    switchOstream(out);
}


void ScannerBase::switchOstream(std::ostream &out)
{
    *d_out << std::flush;
    d_out.reset(new std::ostream(out.rdbuf()));
    d_filename = "-";
}

// $insert debugFunctions
void ScannerBase::setDebug(bool onOff)
{}

bool ScannerBase::debug() const
{
    return false;
}

void ScannerBase::redo(size_t nChars)
{
    size_t from = nChars >= length() ? 0 : length() - nChars;
    d_input.reRead(d_matched, from);
    d_matched.resize(from);
}

void ScannerBase::switchOstream(std::string const &outfilename)
{
    *d_out << std::flush;
    d_out.reset(
            outfilename == "-"    ? new std::ostream(std::cout.rdbuf()) :
            outfilename == ""     ? new std::ostream(std::cerr.rdbuf()) :
                                    new std::ofstream(outfilename));
}


void ScannerBase::switchIstream(std::string const &infilename)
{
    d_input.close();
    d_filename = infilename;
    d_input = Input(new std::ifstream(infilename));
    d_sawEOF = false;
    d_atBOL = true;
}

void ScannerBase::switchStreams(std::string const &infilename,
                           std::string const &outfilename)
{
    switchOstream(outfilename);
    switchIstream(infilename);
}

void ScannerBase::pushStream(std::istream  &istr)
{
    std::istream *streamPtr = new std::istream(istr.rdbuf());
    p_pushStream("(istream)", streamPtr);
}

void ScannerBase::pushStream(std::string const &name)
{
    std::istream *streamPtr = new std::ifstream(name);
    if (!*streamPtr)
    {
        delete streamPtr;
        throw std::runtime_error("Cannot read " + name);
    }
    p_pushStream(name, streamPtr);
}


void ScannerBase::p_pushStream(std::string const &name, std::istream *streamPtr)
{
    if (d_streamStack.size() == s_maxSizeofStreamStack__)
    {
        delete streamPtr;
        throw std::length_error("Max stream stack size exceeded");
    }

    d_streamStack.push_back(StreamStruct{d_filename, d_input});
    d_filename = name;
    d_input = Input(streamPtr);
    d_sawEOF = false;
    d_atBOL = true;
}


bool ScannerBase::popStream()
{
    d_input.close();

    if (d_streamStack.empty())
        return false;

    StreamStruct &top = d_streamStack.back();

    d_input =   top.pushedInput;
    d_filename = top.pushedName;
    d_streamStack.pop_back();
    d_sawEOF = false;

    return true;
}

ScannerBase::ActionType__ ScannerBase::actionType__(size_t range)
{
    d_nextState = d_dfaBase__[d_state][range];

    if (d_nextState != -1)                  // transition is possible
        return ActionType__::CONTINUE;

    if (atFinalState())                     // FINAL state reached
        return ActionType__::MATCH;

    if (d_matched.size())
        return ActionType__::ECHO_FIRST;    // no match, echo the 1st char

    return range != s_rangeOfEOF__ ? 
                ActionType__::ECHO_CH 
            : 
                ActionType__::RETURN;
}

void ScannerBase::accept(size_t nChars)          // old name: less
{
    if (nChars < d_matched.size())
    {
        d_input.reRead(d_matched, nChars);
        d_matched.resize(nChars);
    }
}

  // The size of d_matched is determined:
  //    The current state is a known final state (as determined by 
  // inspectRFCs__(), just prior to calling matched__). 
  //    The contents of d_matched are reduced to d_final's size or (if set)
  // to the LOP-rule's tail size.
void ScannerBase::determineMatchedSize(FinData const &final)
{
    size_t length = final.matchLen;
    if (final.tailCount != std::numeric_limits<size_t>::max())
        length -= final.tailCount;

    d_input.reRead(d_matched, length);      // reread the tail section
    d_matched.resize(length);               // return what's left
}

  // At this point a rule has been matched.  The next character is not part of
  // the matched rule and is sent back to the input.  The final match length
  // is determined, the index of the matched rule is determined, and then
  // d_atBOL is updated. Finally the rule index is returned.
size_t ScannerBase::matched__(size_t ch)
{
    d_input.reRead(ch);

    if (!d_atBOL)
        d_final.atBOL.rule = std::numeric_limits<size_t>::max();

    FinData &final = d_final.atBOL.rule == std::numeric_limits<size_t>::max() ? 
                            d_final.notAtBOL
                        :
                            d_final.atBOL;

    determineMatchedSize(final);

    d_atBOL = *d_matched.rbegin() == '\n';


    return final.rule;
}

size_t ScannerBase::getRange__(int ch)       // using int to prevent casts
{
    if (ch != AT_EOF)
        d_sawEOF = false;

    return ch == AT_EOF ? static_cast<size_t>(s_rangeOfEOF__) : s_ranges__[ch];
}

  // At this point d_nextState contains the next state and continuation is
  // possible. The just read char. is appended to d_match, and LOP counts
  // are updated.
void ScannerBase::continue__(int ch)
{
    d_state = d_nextState;

    if (ch != AT_EOF)
        d_matched += ch;
}

void ScannerBase::echoCh__(size_t ch)
{
    *d_out << static_cast<char>(ch);
    d_atBOL = ch == '\n';
}


   // At this point there is no continuation. The last character is
   // pushed back into the input stream as well as all but the first char. in
   // the buffer. The first char. in the buffer is echoed to stderr. 
   // If there isn't any 1st char yet then the current char doesn't fit any
   // rules and that char is then echoed
void ScannerBase::echoFirst__(size_t ch)
{
    d_input.reRead(ch);
    d_input.reRead(d_matched, 1);
    echoCh__(d_matched[0]);
}

    // Inspect all s_rfc__ elements associated with the current state
    //  If the s_rfc__ element has its COUNT flag set then set the 
    // d_tailCount[rule] value to the element's tailCount value, if it has its 
    // INCREMENT flag set then increment d_tailCount[rule]
    //  If neither was set set the d_tailCount[rule] to numeric_limits<size_t>::max()
    // 
    // If the s_rfc__ element has its FINAL flag set then store the rule number
    // in d_final.second. If it has its FINAL + BOL flags set then store the
    // rule number in d_final.first
void ScannerBase::inspectRFCs__()
{
    for 
    (
        size_t begin = d_dfaBase__[d_state][s_finacIdx__], 
                 end = d_dfaBase__[d_state][s_finacIdx__ + 1];
            begin != end;
                ++begin
    )
    {
        size_t const *rfc = s_rfc__[begin];
        size_t flag = rfc[FLAGS];
        size_t rule = rfc[RULE];

        if (flag & INCREMENT)
            ++d_tailCount[rule];
        else 
            d_tailCount[rule] = (flag & COUNT) ? rfc[ACCCOUNT] : std::numeric_limits<size_t>::max();

        if (flag & FINAL)
        {
            FinData &final = (flag & BOL) ? d_final.atBOL : d_final.notAtBOL;
            final = FinData { rule, d_matched.size(), d_tailCount[rule] };
        }
    }
}

void ScannerBase::reset__()
{
    d_final = Final { {std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max() }, 
                      {std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max() } };
    d_state = 0;
    d_return = true;

    if (!d_more)
        d_matched.clear();

    d_more = false;
}

int Scanner::executeAction__(size_t ruleIdx)
try
{
    switch (ruleIdx)
    {
        // $insert actions
        case 1:
        {
#line 37 "scanner.lex"
            { update(); dumpSymbolTable(); }

        }
        break;
        case 2:
        {
#line 39 "scanner.lex"
            { update(); return( Parser::ENDOFFILE ); }

        }
        break;
        case 3:
        {
#line 41 "scanner.lex"
            { update(); return Parser::COMMENT; }

        }
        break;
        case 4:
        {
#line 42 "scanner.lex"
            { update(); return Parser::COMMENT; }

        }
        break;
        case 5:
        {
#line 44 "scanner.lex"
            { update(); return(Parser::AUTO); }

        }
        break;
        case 6:
        {
#line 45 "scanner.lex"
            { update(); return(Parser::BREAK); }

        }
        break;
        case 7:
        {
#line 46 "scanner.lex"
            { update(); return(Parser::CASE); }

        }
        break;
        case 8:
        {
#line 47 "scanner.lex"
            { update(); return(Parser::CHAR); }

        }
        break;
        case 9:
        {
#line 48 "scanner.lex"
            { update(); return(Parser::CONST); }

        }
        break;
        case 10:
        {
#line 49 "scanner.lex"
            { update(); return(Parser::CONTINUE); }

        }
        break;
        case 11:
        {
#line 50 "scanner.lex"
            { update(); return(Parser::DEFAULT); }

        }
        break;
        case 12:
        {
#line 51 "scanner.lex"
            { update(); return(Parser::DO); }

        }
        break;
        case 13:
        {
#line 52 "scanner.lex"
            { update(); return(Parser::DOUBLE); }

        }
        break;
        case 14:
        {
#line 53 "scanner.lex"
            { update(); return(Parser::ELSE); }

        }
        break;
        case 15:
        {
#line 54 "scanner.lex"
            { update(); return(Parser::ENUM); }

        }
        break;
        case 16:
        {
#line 55 "scanner.lex"
            { update(); return(Parser::EXTERN); }

        }
        break;
        case 17:
        {
#line 56 "scanner.lex"
            { update(); return(Parser::FLOAT); }

        }
        break;
        case 18:
        {
#line 57 "scanner.lex"
            { update(); return(Parser::FOR); }

        }
        break;
        case 19:
        {
#line 58 "scanner.lex"
            { update(); return(Parser::GOTO); }

        }
        break;
        case 20:
        {
#line 59 "scanner.lex"
            { update(); return(Parser::IF); }

        }
        break;
        case 21:
        {
#line 60 "scanner.lex"
            {}

        }
        break;
        case 22:
        {
#line 61 "scanner.lex"
            { update(); return(Parser::INT); }

        }
        break;
        case 23:
        {
#line 62 "scanner.lex"
            { update(); return(Parser::LONG); }

        }
        break;
        case 24:
        {
#line 63 "scanner.lex"
            { update(); return(Parser::REGISTER); }

        }
        break;
        case 25:
        {
#line 64 "scanner.lex"
            {}

        }
        break;
        case 26:
        {
#line 65 "scanner.lex"
            { update(); return(Parser::RETURN); }

        }
        break;
        case 27:
        {
#line 66 "scanner.lex"
            { update(); return(Parser::SHORT); }

        }
        break;
        case 28:
        {
#line 67 "scanner.lex"
            { update(); return(Parser::SIGNED); }

        }
        break;
        case 29:
        {
#line 68 "scanner.lex"
            { update(); return(Parser::SIZEOF); }

        }
        break;
        case 30:
        {
#line 69 "scanner.lex"
            { update(); return(Parser::STATIC); }

        }
        break;
        case 31:
        {
#line 70 "scanner.lex"
            { update(); return(Parser::STRUCT); }

        }
        break;
        case 32:
        {
#line 71 "scanner.lex"
            { update(); return(Parser::SWITCH); }

        }
        break;
        case 33:
        {
#line 72 "scanner.lex"
            { update(); return(Parser::TYPEDEF); }

        }
        break;
        case 34:
        {
#line 73 "scanner.lex"
            { update(); return(Parser::UNION); }

        }
        break;
        case 35:
        {
#line 74 "scanner.lex"
            { update(); return(Parser::UNSIGNED); }

        }
        break;
        case 36:
        {
#line 75 "scanner.lex"
            { update(); return(Parser::VOID); }

        }
        break;
        case 37:
        {
#line 76 "scanner.lex"
            { update(); return(Parser::VOLATILE); }

        }
        break;
        case 38:
        {
#line 77 "scanner.lex"
            { update(); return(Parser::WHILE); }

        }
        break;
        case 39:
        {
#line 79 "scanner.lex"
            { update(); return(Parser::IDENTIFIER); }

        }
        break;
        case 40:
        {
#line 81 "scanner.lex"
            { update(); return Parser::I_CONSTANT; }

        }
        break;
        case 41:
        {
#line 82 "scanner.lex"
            { update(); return Parser::I_CONSTANT; }

        }
        break;
        case 42:
        {
#line 83 "scanner.lex"
            { update(); return Parser::I_CONSTANT; }

        }
        break;
        case 43:
        {
#line 84 "scanner.lex"
            { update(); return Parser::I_CONSTANT; }

        }
        break;
        case 44:
        {
#line 86 "scanner.lex"
            { update(); return Parser::F_CONSTANT; }

        }
        break;
        case 45:
        {
#line 87 "scanner.lex"
            { update(); return Parser::F_CONSTANT; }

        }
        break;
        case 46:
        {
#line 88 "scanner.lex"
            { update(); return Parser::F_CONSTANT; }

        }
        break;
        case 47:
        {
#line 89 "scanner.lex"
            { update(); return Parser::F_CONSTANT; }

        }
        break;
        case 48:
        {
#line 90 "scanner.lex"
            { update(); return Parser::F_CONSTANT; }

        }
        break;
        case 49:
        {
#line 91 "scanner.lex"
            { update(); return Parser::F_CONSTANT; }

        }
        break;
        case 50:
        {
#line 93 "scanner.lex"
            { update(); return Parser::STRING_LITERAL; }

        }
        break;
        case 51:
        {
#line 95 "scanner.lex"
            { update(); return(Parser::ELLIPSIS); }

        }
        break;
        case 52:
        {
#line 96 "scanner.lex"
            { update(); return(Parser::RIGHT_ASSIGN); }

        }
        break;
        case 53:
        {
#line 97 "scanner.lex"
            { update(); return(Parser::LEFT_ASSIGN); }

        }
        break;
        case 54:
        {
#line 98 "scanner.lex"
            { update(); return(Parser::ADD_ASSIGN); }

        }
        break;
        case 55:
        {
#line 99 "scanner.lex"
            { update(); return(Parser::SUB_ASSIGN); }

        }
        break;
        case 56:
        {
#line 100 "scanner.lex"
            { update(); return(Parser::MUL_ASSIGN); }

        }
        break;
        case 57:
        {
#line 101 "scanner.lex"
            { update(); return(Parser::DIV_ASSIGN); }

        }
        break;
        case 58:
        {
#line 102 "scanner.lex"
            { update(); return(Parser::MOD_ASSIGN); }

        }
        break;
        case 59:
        {
#line 103 "scanner.lex"
            { update(); return(Parser::AND_ASSIGN); }

        }
        break;
        case 60:
        {
#line 104 "scanner.lex"
            { update(); return(Parser::XOR_ASSIGN); }

        }
        break;
        case 61:
        {
#line 105 "scanner.lex"
            { update(); return(Parser::OR_ASSIGN); }

        }
        break;
        case 62:
        {
#line 106 "scanner.lex"
            { update(); return(Parser::RIGHT_OP); }

        }
        break;
        case 63:
        {
#line 107 "scanner.lex"
            { update(); return(Parser::LEFT_OP); }

        }
        break;
        case 64:
        {
#line 108 "scanner.lex"
            { update(); return(Parser::INC_OP); }

        }
        break;
        case 65:
        {
#line 109 "scanner.lex"
            { update(); return(Parser::DEC_OP); }

        }
        break;
        case 66:
        {
#line 110 "scanner.lex"
            { update(); return(Parser::PTR_OP); }

        }
        break;
        case 67:
        {
#line 111 "scanner.lex"
            { update(); return(Parser::AND_OP); }

        }
        break;
        case 68:
        {
#line 112 "scanner.lex"
            { update(); return(Parser::OR_OP); }

        }
        break;
        case 69:
        {
#line 113 "scanner.lex"
            { update(); return(Parser::LE_OP); }

        }
        break;
        case 70:
        {
#line 114 "scanner.lex"
            { update(); return(Parser::GE_OP); }

        }
        break;
        case 71:
        {
#line 115 "scanner.lex"
            { update(); return(Parser::EQ_OP); }

        }
        break;
        case 72:
        {
#line 116 "scanner.lex"
            { update(); return(Parser::NE_OP); }

        }
        break;
        case 73:
        {
#line 117 "scanner.lex"
            { update(); return(';'); }

        }
        break;
        case 74:
        {
#line 118 "scanner.lex"
            { update(); return('{'); }

        }
        break;
        case 75:
        {
#line 119 "scanner.lex"
            { update(); return('}'); }

        }
        break;
        case 76:
        {
#line 121 "scanner.lex"
            { update(); return(','); }

        }
        break;
        case 77:
        {
#line 122 "scanner.lex"
            { update(); return(':'); }

        }
        break;
        case 78:
        {
#line 123 "scanner.lex"
            { update(); return('='); }

        }
        break;
        case 79:
        {
#line 124 "scanner.lex"
            { update(); return('('); }

        }
        break;
        case 80:
        {
#line 125 "scanner.lex"
            { update(); return(')'); }

        }
        break;
        case 81:
        {
#line 126 "scanner.lex"
            { update(); return('['); }

        }
        break;
        case 82:
        {
#line 127 "scanner.lex"
            { update(); return(']'); }

        }
        break;
        case 83:
        {
#line 128 "scanner.lex"
            { update(); return('.'); }

        }
        break;
        case 84:
        {
#line 129 "scanner.lex"
            { update(); return('&'); }

        }
        break;
        case 85:
        {
#line 130 "scanner.lex"
            { update(); return('!'); }

        }
        break;
        case 86:
        {
#line 131 "scanner.lex"
            { update(); return('~'); }

        }
        break;
        case 87:
        {
#line 132 "scanner.lex"
            { update(); return('-'); }

        }
        break;
        case 88:
        {
#line 133 "scanner.lex"
            { update(); return('+'); }

        }
        break;
        case 89:
        {
#line 134 "scanner.lex"
            { update(); return('*'); }

        }
        break;
        case 90:
        {
#line 135 "scanner.lex"
            { update(); return('/'); }

        }
        break;
        case 91:
        {
#line 136 "scanner.lex"
            { update(); return('%'); }

        }
        break;
        case 92:
        {
#line 137 "scanner.lex"
            { update(); return('<'); }

        }
        break;
        case 93:
        {
#line 138 "scanner.lex"
            { update(); return('>'); }

        }
        break;
        case 94:
        {
#line 139 "scanner.lex"
            { update(); return('^'); }

        }
        break;
        case 95:
        {
#line 140 "scanner.lex"
            { update(); return('|'); }

        }
        break;
        case 96:
        {
#line 141 "scanner.lex"
            { update(); return('?'); }

        }
        break;
        case 97:
        {
#line 143 "scanner.lex"
            { update();}

        }
        break;
        case 98:
        {
#line 144 "scanner.lex"
            { update(); }

        }
        break;
        case 99:
        {
#line 145 "scanner.lex"
            { update(); }

        }
        break;
        case 100:
        {
#line 146 "scanner.lex"
            { update(); }

        }
        break;
        case 101:
        {
#line 148 "scanner.lex"
            { update(); return Parser::CHAR_LITERAL; }

        }
        break;
        case 102:
        {
#line 150 "scanner.lex"
            { scannerError(); }

        }
        break;
    }
    noReturn__();
    return 0;
}
catch (Leave__ value)
{
    return static_cast<int>(value);
}

int Scanner::lex__()
{
    reset__();
    preCode();

    while (true)
    {
        size_t ch = get__();                // fetch next char
        size_t range = getRange__(ch);      // determine the range

        inspectRFCs__();                    // update d_tailCount values

        switch (actionType__(range))        // determine the action
        {
            case ActionType__::CONTINUE:
                continue__(ch);
            continue;

            case ActionType__::MATCH:
            {
                d_token__ = executeAction__(matched__(ch));
                if (return__())
                {
                    print();
                    return d_token__;
                }
                break;
            }

            case ActionType__::ECHO_FIRST:
                echoFirst__(ch);
            break;

            case ActionType__::ECHO_CH:
                echoCh__(ch);
            break;

            case ActionType__::RETURN:
                if (!popStream())
                    return 0;
            continue;
        } // switch

        reset__();
        preCode();
    } // while
}

void ScannerBase::print__() const
{
}


