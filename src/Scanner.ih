// Generated by Flexc++ V0.98.00 on Tue, 26 Feb 2013 15:00:00 -0800

// $insert class_h
#include "Scanner.h"
#include "Parser.h"
#include <fstream>

void Scanner::scannerError()
{

	//std::cerr << "Lexical Error @ " << location.lnum << ":" << location.cnum << std::endl;
	
	// std::string s = lex();
	
	// int i = lex();
	
	char c;
	
	ref_istream->putback( c );
	
	lineValue += c;
	
	ref_istream->get(c);
	
	while( c != '\n' && c != EOF )
	{
	
		lineValue += c;
		
		ref_istream->get(c);
	
	}
	
	std::cout << std::endl << lineValue << std::endl; 
	
	for( int i = 0; i < location.cnum ; i++ )
	{
		
		std::cout << " ";
	
	}
	
	std::cout << "^";
	
	std::cout << "Lexical Error @ Line: " << location.lnum << ":" << location.cnum << std::endl;
	
	exit(0);

}

void Scanner::updateLocation()
{
    //std::cout << "\t\t\t\t" << "(lnum,cnum)=(" << location.lnum << "," << location.cnum << ")" << std::endl;

    std::string mstr(matched());
    if ( mstr == "\n" ) {
        location.lnum++; 
        location.cnum = 0;
        lineValue = "";
    }
    else if ( mstr == "\t" ) {
        location.cnum += tabWidth;
        for( int i = 0 ; i < tabWidth ; i++ )
        {
        	lineValue += " ";
        }
    }
    else {
        location.cnum += mstr.size();
        lineValue += mstr;
    }

   	
}



void Scanner::dumpSymbolTable()
{

	stab->dumpTable( "symboltable.txt" );

}
